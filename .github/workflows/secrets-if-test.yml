name: Test Secrets Usage in If Conditions

on: [push]

env:
  # Setting secret value manually here for demonstration only
  EXPECTED_SECRET_VALUE: run-job

jobs:
  # --- A: Correct way using job output ---
  expose-secret:
    runs-on: ubuntu-latest
    outputs:
      mysecretvalue: ${{ steps.set-secret.outputs.secret }}
    steps:
      - name: Set secret output
        id: set-secret
        run: echo "secret=${{ env.EXPECTED_SECRET_VALUE }}" >> $GITHUB_OUTPUT

  job-a-correct-outputs:
    needs: expose-secret
    runs-on: ubuntu-latest
    if: needs.expose-secret.outputs.mysecretvalue == 'run-job'
    steps:
      - run: echo "✅ A PASSED: Using job output worked!"

  # --- B: Set secret as env and try to use in job if ---
  job-b-env-direct:
    runs-on: ubuntu-latest
    env:
      MY_SECRET: ${{ env.EXPECTED_SECRET_VALUE }}
    if: env.MY_SECRET == 'run-job'
    steps:
      - run: echo "✅ B PASSED: Env direct usage worked!"
    continue-on-error: true  # prevent workflow from stopping if this fails

  # --- C: Use step output inside job ---
  step-output-job:
    runs-on: ubuntu-latest
    outputs:
      mystepoutput: ${{ steps.expose.outputs.secret }}
    steps:
      - id: expose
        run: echo "secret=${{ env.EXPECTED_SECRET_VALUE }}" >> $GITHUB_OUTPUT

  job-c-step-output:
    needs: step-output-job
    runs-on: ubuntu-latest
    if: needs.step-output-job.outputs.mystepoutput == 'run-job'
    steps:
      - run: echo "✅ C PASSED: Step output usage worked!"

  # --- D: Try direct secrets usage in job if (Expected to FAIL) ---
  job-d-secrets-direct:
    runs-on: ubuntu-latest
    if: secrets.EXPECTED_SECRET_VALUE == 'run-job'
    steps:
      - run: echo "❌ D SHOULD FAIL: Trying to use secrets directly at job level"
    continue-on-error: true  # prevent breaking everything
